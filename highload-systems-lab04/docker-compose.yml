version: '3.8'

services:
  envoy:
    image: envoyproxy/envoy:v1.26.1
    ports:
      - "8080:8080"
      - "9901:9901"
    volumes:
      - ./envoy.yaml:/etc/envoy/envoy.yaml
    networks:
      - lightbulb-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # AMQP protocol port
      - "15672:15672"  # HTTP management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    networks:
      - lightbulb-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  python-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: lightbulb-backend
    ports:
      - "50051:50051"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PORT=50051
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest
    networks:
      - lightbulb-network
    restart: unless-stopped

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: lightbulb-notification-service
    ports:
      - "50052:50052"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PORT=50052
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest
    networks:
      - lightbulb-network
    restart: unless-stopped
  
  react-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: lightbulb-frontend
    ports:
      - "3000:3000"

volumes:
  rabbitmq_data:

networks:
  lightbulb-network:
    driver: bridge 